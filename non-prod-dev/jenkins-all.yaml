apiVersion: v1beta3                                                                              
kind: List                                                                                       
items:                                                                                           
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"jenkins"}}'
      labels:
        app: jenkins-persistent
        template: jenkins-persistent-template
      name: jenkins
      namespace: dev

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        volume.beta.kubernetes.io/storage-class: mn-ds-vsan01
      labels:
        app: jenkins-persistent
        template: jenkins-persistent-template
      name: jenkins
      namespace: dev
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
      labels:
        app: jenkins-persistent
        template: jenkins-persistent-template
      name: jenkins
      namespace: dev
    spec:
      replicas: 1
      selector:
        name: jenkins
      strategy:
        activeDeadlineSeconds: 21600
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            name: jenkins
        spec:
          containers:
            - env:
                - name: OPENSHIFT_ENABLE_OAUTH
                  value: 'true'
                - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
                  value: 'true'
                - name: KUBERNETES_MASTER
                  value: 'https://kubernetes.default:443'
                - name: KUBERNETES_TRUST_CERTIFICATES
                  value: 'true'
                - name: JENKINS_SERVICE_NAME
                  value: jenkins
                - name: JNLP_SERVICE_NAME
                  value: jenkins-jnlp
                - name: CHECKOUT_PATH
                  value: jenkins-dev
              image: '<DOCKER_REGISTRY>/jenkins.docker.base'
              imagePullPolicy: Always              
              livenessProbe:
                failureThreshold: 2
                httpGet:
                  path: /login
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 420
                periodSeconds: 360
                successThreshold: 1
                timeoutSeconds: 240
              name: jenkins
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /login
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 3
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 240
              securityContext:
                capabilities: {}
                privileged: false
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/lib/jenkins
                  name: jenkins-data
              resources:
                limits:
                  cpu: 512m
                  memory: 512Mi
                requests:
                  cpu: 100m
                  memory: 256Mi
          dnsPolicy: ClusterFirst
          imagePullSecrets:
            - name: gcr-docker-oauth
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: jenkins
          serviceAccountName: jenkins
          terminationGracePeriodSeconds: 30
          volumes:
            - name: jenkins-data
              persistentVolumeClaim:
                claimName: jenkins
      test: false
      triggers:
        - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: jenkins-persistent
        template: jenkins-persistent-template
      name: jenkins-jnlp
      namespace: dev
    spec:
      ports:
        - name: agent
          port: 50000
          protocol: TCP
          targetPort: 50000
      selector:
        name: jenkins
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.alpha.openshift.io/dependencies: '[{"name": "jenkins-jnlp", "namespace": "", "kind": "Service"}]'
        service.openshift.io/infrastructure: 'true'
      labels:
        app: jenkins-persistent
        template: jenkins-persistent-template
      name: jenkins
      namespace: dev
    spec:
      ports:
        - name: web
          port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        name: jenkins
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations:
        haproxy.router.openshift.io/timeout: 4m
        openshift.io/host.generated: 'true'
        template.openshift.io/expose-uri: 'http://{.spec.host}{.spec.path}'
      labels:
        app: jenkins-persistent
        exposure: general
        template: jenkins-persistent-template
      name: jenkins
      namespace: dev
      selfLink: /apis/route.openshift.io/v1/namespaces/dev/routes/jenkins
    spec:
      host: jenkins-dev.domain.com
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: jenkins
        weight: 100
      wildcardPolicy: None

